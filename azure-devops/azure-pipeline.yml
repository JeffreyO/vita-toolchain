parameters:
  - name: BuildType
    displayName: 'Build Type'
    type: string
    default: Release
    values:
    - Release
    - Debug
    - RelWithDebInfo
    - MinSizeRel
  - name: IncludeBuildLogs
    displayName: 'Include Build and Configure logs even on build success'
    default: false
    type: boolean

variables:
- name: VITASDK
  value: /usr/local/vitasdk
  readonly: true
- name: VITASDK_CMAKE_TOOLCHAIN
  value: $(VITASDK)/share/vita.toolchain.cmake
  readonly: true

pool:
#     vmImage: 'ubuntu-latest'
  vmImage: 'ubuntu-latest'

container: gnuton/vitasdk-docker:latest

steps:
- script: sudo apt install -qq -y pkg-config ninja-build
  displayName: 'Install extra dependencies'

- task: CMake@1
  name: CMakeConfigure
  displayName: 'Configuring CMake'
  inputs:
    cmakeArgs: |
      -S $(Build.SourcesDirectory) \
      -B $(Agent.BuildDirectory) \
      -G Ninja \
      -DCMAKE_TOOLCHAIN_FILE=${VITASDK_CMAKE_TOOLCHAIN} \
      -DCMAKE_BUILD_TYPE=${{ parameters.BuildType }}
    runInsideShell: true

- script: cmake --build $(Agent.BuildDirectory)
  displayName: 'Building Vita Homebrew App: $(Build.Repository.Name)'
  name: CMakeBuild

- task: CopyFiles@2
  displayName: 'Copy binaries for installing app to Artifact Staging Directory'
  condition: succeeded()
  inputs:
    SourceFolder: '$(Agent.BuildDirectory)'
    Contents: '**/?(*.vpk|*.skprx|*.suprx)'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- ${{ if or(eq(parameters.BuildType, 'Debug'), eq(parameters.BuildType, 'RelWithDebInfo')) }}:
  - task: CopyFiles@2
    displayName: 'Copy binaries needed for debugging coredumps to Artifact Staging Directory'
    condition: succeeded()
    inputs:
      SourceFolder: '$(Agent.BuildDirectory)'
      Contents: '**/?(*.elf)'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

# TODO: Add option to copy files located in CMake Install directory instead. Not compatible with every project.

- task: PublishPipelineArtifact@1
  displayName: 'Publish Vita VPK Build Artifacts (Build Succeeded)'
  condition: succeeded()
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/'
    artifact: 'Vita Package (VPK)'
    publishLocation: 'pipeline'
    archiveFilePatterns: '**'

- task: CopyFiles@2
  displayName: 'Copy CMake and Ninja build files for debugging build to Artifact Staging Directory'
  condition: or(failed(), eq(${{ parameters.IncludeBuildLogs }}, true))
  inputs:
    SourceFolder: '$(Agent.BuildDirectory)'
    Contents: '**/?(CMakeCache.txt|CMakeLists.txt|CMake*.txt|build.ninja|.ninja_log)'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: true

- task: PublishPipelineArtifact@1
  displayName: 'Publish Build Configuration and Logs'
  condition: or(failed(), eq(${{ parameters.IncludeBuildLogs }}, true))
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/'
    artifact: 'Build Log and Configure Files'
    publishLocation: 'pipeline'
    archiveFilePatterns: '**'
